@page "/"
@using System.Timers
@rendermode InteractiveAuto
@inject IJSRuntime JSRuntime

<!-- Page header contains page title -->
<div class="row justify-content-center my-5">
    <div class="col-10 col-sm-10 col-md-8 col-lg-5 col-xl-4 text-center">
        <span class="fw-bolder fs-2">Lorem Ipsum</span>
    </div>
</div>
<!-- Page header contains page title -->

<!-- Mega Menu -->
<div class="row justify-content-center mb-5">
    <div class="col-10 col-sm-10 col-md-8 col-lg-5 col-xl-4 text-center">
        <a class="btn" href="#">Home</a>
        <a class="btn" href="#">About</a>
        <a id="collapseButton" class="btn rounded-bottom-0 rounded-top-1 @(isMegaMenuVisible? "bg-mega-menu mega-menu-btn-shadow" : "")" @onclick="ToggleCollapse" @onmouseover="StartTimer" @onmouseleave='() => CheckMousePosition("collapse")'>
            <span>Products</span>
            <span><i class="bi bi-caret-down-fill"></i></span>
        </a>
    </div>
    @if (isMegaMenuVisible)
    {
        // class="col-10 col-sm-10 col-md-6 col-lg-5 col-xl-4"
        <div class="row justify-content-center">
            <div class="col-10 col-sm-10 col-md-12 col-lg-10 col-xl-8 bg-mega-menu rounded-2 mega-menu-box-shadow">
                <div @ref="collapseDiv" id="collapse" class="row justify-content-center p-3" @onmouseleave='() => CheckMousePosition("collapseButton")'>
                    @for (int i = 0; i < megaMenuColumnCount; i++)
                    {
                        // create column for mega menu dynamically based on megaMenuColumnCount
                        <div class="col">
                            @foreach (var item in megaMenuItems)
                            {
                                // put each mega menu item in correct column
                                if (item.ColumnIndex == i)
                                {
                                    <div class="@(item.IsHeader? "my-2 fs-6" : "mb-1 fs-6")">
                                        <a class="link-dark @(item.IsHeader? "link-offset-3 link-underline link-underline-opacity-10 fw-bold" : "link-underline link-underline-opacity-0")" href="@item.Link"> @item.Text </a>
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>
<!-- Mega Menu -->

<!-- Sub-header, this will blur if mega menu opened -->
<div class="row justify-content-center mb-3 @(isMegaMenuVisible? "blur" : "")">
    <div class="col-10 col-sm-10 col-md-8 col-lg-5 col-xl-4 text-center">
        <span class="title fw-lighter fst-italic">"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit..."</span>
    </div>
</div>
<!-- Sub-header -->

<!-- Main Content, this will blur if mega menu opened -->
<div class="row justify-content-center @(isMegaMenuVisible? "blur" : "")">
    <div class="col-10 col-sm-10 col-md-6 col-lg-5 col-xl-4">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus a enim non massa eleifend elementum. Fusce eget purus et quam ultricies tempor. Aliquam erat volutpat. In quis blandit turpis. Sed sed justo convallis, ornare eros ac, posuere sem. Ut est turpis, luctus id iaculis eget, porta id tellus. Donec ipsum odio, molestie nec varius eu, tincidunt pharetra ex. Praesent lacinia facilisis luctus. Vivamus venenatis lacus id leo scelerisque fermentum. Sed venenatis sit amet erat vitae consequat. Aenean sodales turpis eu eleifend lacinia. Nunc vel tellus non massa tincidunt auctor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Fusce laoreet tortor a erat ultricies, vel tempor turpis blandit. Morbi rutrum ligula ac felis tincidunt, at fringilla metus tincidunt. Mauris at dictum neque.

        Mauris egestas congue ligula ac accumsan. Proin tempus rutrum aliquam. Nullam vel rutrum sem. Nullam nunc mauris, accumsan ac finibus id, finibus non diam. Integer a enim nec lectus vehicula ultrices. Nulla ipsum elit, luctus auctor nulla in, venenatis ornare magna. Maecenas sagittis tortor turpis, ut tempor dolor lacinia ut. Integer posuere interdum magna vel cursus. Quisque dictum, diam euismod fermentum ultricies, dui dolor placerat sem, id faucibus ex nisi eu velit. Curabitur nec sem dolor. Mauris volutpat orci eget est molestie facilisis. Nullam nisl diam, consequat at commodo non, malesuada quis leo. Nunc egestas, erat non elementum tincidunt, diam sem aliquet urna, nec aliquam ligula tortor quis nunc. Nullam quis rhoncus urna.
    </div>
    <div class="col-10 col-sm-10 col-md-6 col-lg-5 col-xl-4">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus a enim non massa eleifend elementum. Fusce eget purus et quam ultricies tempor. Aliquam erat volutpat. In quis blandit turpis. Sed sed justo convallis, ornare eros ac, posuere sem. Ut est turpis, luctus id iaculis eget, porta id tellus. Donec ipsum odio, molestie nec varius eu, tincidunt pharetra ex. Praesent lacinia facilisis luctus. Vivamus venenatis lacus id leo scelerisque fermentum. Sed venenatis sit amet erat vitae consequat. Aenean sodales turpis eu eleifend lacinia. Nunc vel tellus non massa tincidunt auctor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Fusce laoreet tortor a erat ultricies, vel tempor turpis blandit. Morbi rutrum ligula ac felis tincidunt, at fringilla metus tincidunt. Mauris at dictum neque.

        Mauris egestas congue ligula ac accumsan. Proin tempus rutrum aliquam. Nullam vel rutrum sem. Nullam nunc mauris, accumsan ac finibus id, finibus non diam. Integer a enim nec lectus vehicula ultrices. Nulla ipsum elit, luctus auctor nulla in, venenatis ornare magna. Maecenas sagittis tortor turpis, ut tempor dolor lacinia ut. Integer posuere interdum magna vel cursus. Quisque dictum, diam euismod fermentum ultricies, dui dolor placerat sem, id faucibus ex nisi eu velit. Curabitur nec sem dolor. Mauris volutpat orci eget est molestie facilisis. Nullam nisl diam, consequat at commodo non, malesuada quis leo. Nunc egestas, erat non elementum tincidunt, diam sem aliquet urna, nec aliquam ligula tortor quis nunc. Nullam quis rhoncus urna.
    </div>
</div>

<script type="text/javascript">

    // check mouse eneter an element
    window.checkMousePosition = function (elementId) {
        var element = document.getElementById(elementId);
        var rect = element.getBoundingClientRect();
        return (window.event.clientY >= rect.top && window.event.clientY <= rect.bottom && window.event.clientX >= rect.left && window.event.clientX <= rect.right);
    }

    // setup click listener
    window.setupClickListener = function (dotnetHelper) {
        window.dotnetHelper = dotnetHelper;
    }

    // add click listener to document
    window.addClickListener = function (element) {
        document.addEventListener('click', window.clickListener);
    }

    // remove click listener from document
    window.removeClickListener = function (element) {
        document.removeEventListener('click', window.clickListener);
    }

    // window click listener
    window.clickListener = function (event) {
        if (!document.getElementById('collapse').contains(event.target)) {
            window.dotnetHelper.invokeMethodAsync('HideCollapse');
            document.removeEventListener('click', window.clickListener);
        }
    }

</script>

@code {
    // numbers of column in mega menu
    private int megaMenuColumnCount = 3;

    // handle mega menu collapse div visibility
    private bool isMegaMenuVisible = false;

    // handle mega menu button hover
    // wait a little to prevent unnecessary action with any rapid movement of mouse 
    private bool waitingToVisible = false;

    // handle mega menu visibility
    // wait a little to prevent unnecessary action with any rapid movement of mouse
    private Timer timer;

    // handle click event on mega menu button
    private ElementReference collapseDiv;

    // list of mega menu items
    private List<MenuItem> megaMenuItems = new List<MenuItem>();

    void StartTimer(MouseEventArgs e)
    {
        // start a timer and wait a while, then fire show content events
        // it's prevent unnecessary action with any rapid movement of mouse
        if (!waitingToVisible)
        {
            waitingToVisible = true;
            if (!isMegaMenuVisible)
            {
                timer = new Timer(400);
                timer.Elapsed += ShowContent;
                timer.Start();
            }
        }
    }

    async void ShowContent(object sender, System.Timers.ElapsedEventArgs e)
    {
        // make mega menu visible if mouse hovering mega menu button for a while
        if (waitingToVisible)
        {
            await InvokeAsync(() =>
            {
                isMegaMenuVisible = true;
                StateHasChanged();
            });
            timer.Stop();
            timer.Dispose();

        }
    }

    async Task CheckMousePosition(string elementId)
    {
        // this function fires on mouse leave from mega menu button and mega menu box
        // if mouse leave mega menu button and enter mega menu box, no action required
        // if mouse leave mega menu box and enter mega menu button, no action required
        // else, mega menu box should hide

        waitingToVisible = false;
        if (timer != null)
        {
            timer.Stop();
            timer.Dispose();
        }
        if (isMegaMenuVisible)
        {
            // check where enter mouse
            bool isMouseOverElement = await JSRuntime.InvokeAsync<bool>("checkMousePosition", elementId);
            if (!isMouseOverElement)
            {
                HideContent();
            }
        }
    }

    void HideContent()
    {
        // make mega menu box invisible by leaving mouse
        waitingToVisible = false;
        isMegaMenuVisible = false;
    }

    private async Task ToggleCollapse()
    {
        isMegaMenuVisible = !isMegaMenuVisible;

        // add appropriate click event based on collapse div is open or hide
        if (isMegaMenuVisible)
        {
            await JSRuntime.InvokeVoidAsync("addClickListener", collapseDiv);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("removeClickListener", collapseDiv);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // initialize click event listener in first render
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setupClickListener", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void HideCollapse()
    {
        // make mega menu box invisible by clicking outside the box
        isMegaMenuVisible = false;
        StateHasChanged();
    }


    protected override void OnInitialized()
    {
        // seed mega menu items in first lunch
        megaMenuItems = SeedData.SeedMenuItems();
    }
}
